1. What happens when you initialize a repository? Why do you need to do it?

when we initialize a repository a .git file gets created which holds the metadata of the history of the files contained in the git repository.

2. How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area is the place where all the logical files are grouped first before making a single commit.

3 .How can you use the staging area to make sure you have one commit per logical change?

We can add only those files that are logically connected to each other wrt any changes and then commit all of them together.

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would be helpful to preserve the master as it is and try out some other new features in a seperate branch. Hence the working master is not affected.

5.How do the diagrams help you visualize the branch structure?

it is easier to find which commits are reachabile from the current branch and which are not.

6. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

merging two branches together combines the code changes in both the branches. In the diagram, we represent it in such a way that the current master has two parents.

7. What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

Git's automatic merging ensures that no code change is missed. But there could be a conflict which has to anyways be manually resolved.




